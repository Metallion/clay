--- calc ---
i = 100
{{- $i := 100}}

i = i + 2
{{- $i := add $i 2}}
{{$i}}

i = i - 4
{{- $i := sub $i 4}}
{{$i}}

i = i * 6
{{- $i := mul $i 6}}
{{$i}}

i = i / 2
{{- $i := div $i 2}}
{{$i}}

i = i mod 5
{{- $i := mod $i 5}}
{{$i}}

--- slice ---
slice init
{{- $slice1 := slice}}
slice1: {{$slice1}}

slice init
{{- $slice2 := slice 1 2 3 4 5}}
slice2: {{$slice2}}

slice init
{{- $slice3 := slice 3 4 5 6 7}}
slice3: {{$slice3}}

subslice
{{- $subslice := subslice $slice3 -1 3}}
{{$subslice}}

subslice
{{subslice $slice3 1 -1}}

subslice
{{subslice $slice3 -1 -1}}

subslice
{{subslice $slice3 1 3}}

append
{{- $slice3 := append $slice3 8 9 10}}
{{$slice3}}

concatenate
{{concatenate $slice2 $slice3}}

--- map ---
map
{{- $map1 := map}}
map1: {{$map1}}

map init get
{{- $map2 := map 1 "A" 2 "B"}}
map2[1]: {{get $map2 1}}
map2[2]: {{get $map2 2}}

map init get
{{- $map3 := map 1 "C" 3 "D"}}
map3[1]: {{get $map3 1}}
map3[3]: {{get $map3 3}}

map exists
{{exists $map2 0}}
{{- $e := exists $map2 1}}
{{if eq $e true}}TRUE!!{{else}}FALSE!!{{end}}


map put
{{- $null := put $map1 4 "E"}}
{{- $null := put $map1 5 "F"}}
{{- $null := put $map1 6 "G"}}
map1[4]: {{get $map1 4}}
map1[5]: {{get $map1 5}}
map1[6]: {{get $map1 6}}

map delete
{{- $null := delete $map1 5}}
map1[3]: {{get $map1 3}}
map1[4]: {{get $map1 4}}
map1[5]: {{get $map1 5}}
map1[6]: {{get $map1 6}}
map1[7]: {{get $map1 7}}

map merge
{{- $null := merge $map2 $map1}}
{{- $null := merge $map3 $map1}}
map1[0]: {{get $map1 0}}
map1[1]: {{get $map1 1}}
map1[2]: {{get $map1 2}}
map1[3]: {{get $map1 3}}
map1[4]: {{get $map1 4}}
map1[5]: {{get $map1 5}}
map1[6]: {{get $map1 6}}
map1[7]: {{get $map1 7}}

--- model store ---
multi
{{- $m := multi .ModelStore "templates" "preloads=TemplatePersistentParameters"}}
{{- $t := index $m 0}}
{{$t.Name}}
{{- $p1 := index $t.TemplatePersistentParameters 0}}
{{$p1.Name}}={{$p1.ValueString.String}}
{{- $p2 := index $t.TemplatePersistentParameters 1}}
{{$p2.Name}}={{$p2.ValueString.String}}

single
{{- $s := single .ModelStore "templates" .testParameter11.ValueInt.Int64 "preloads=TemplatePersistentParameters"}}
{{$s.Name}}
{{- $p1 := index $s.TemplatePersistentParameters 0}}
{{$p1.Name}}={{$p1.ValueString.String}}
{{- $p2 := index $s.TemplatePersistentParameters 1}}
{{$p2.Name}}={{$p2.ValueString.String}}

total
{{- $t := total .ModelStore "template_persistent_parameters"}}
{{$t}}

--- hash ---
hash
{{- $h := hash $s.TemplatePersistentParameters "Name"}}
hash[testParameter11]={{get $h "testParameter11"}}
hash[testParameter12]={{get $h "testParameter12"}}

--- slicemap ---
slicemap
{{- $p := multi .ModelStore "template_persistent_parameters" ""}}
{{- $z := slicemap $p "Name"}}
{{- $z1 := get $z "testParameter11"}}
{{- $z2 := get $z "testParameter12"}}
{{- $z3 := get $z "testParameter1X"}}
{{- range $i, $v := $z1 }}
slicemap[testParameter1][{{$i}}]={{$v}}
{{- end}}
{{- range $i, $v := $z2 }}
slicemap[testParameter2][{{$i}}]={{$v}}
{{- end}}
{{- range $i, $v := $z3 }}
slicemap[testParameter1X][{{$i}}]={{$v}}
{{- end}}

--- sequence ---
sequence
{{- $s := sequence 1 10}}
{{- range $i, $v := $s}}
sequence[{{$i}}]={{$v}}
{{- end}}
