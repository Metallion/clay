{
  "type_name": "Layer2Link",
  "resource_name": "layer2_links",
  "to_be_migrated": false,
  "is_controller_enabled": true,
  "is_design_access_disabled": true,
  "fields": [
    {
      "name": "SourcePortID",
      "tag": "json:\"source_port_id\" yaml:\"source_port_id\"",
      "type_name": "int"
    },
    {
      "name": "SourcePort",
      "tag": "json:\"source_port\" yaml:\"source_port\" gorm:\"ForeignKey:SourcePortID\"",
      "type_name": "Port"
    },
    {
      "name": "SourceNodeID",
      "tag": "json:\"source_node_id\" yaml:\"source_node_id\"",
      "type_name": "int"
    },
    {
      "name": "SourceNode",
      "tag": "json:\"source_node\" yaml:\"source_node\" gorm:\"ForeignKey:SourceNodeID\"",
      "type_name": "Node"
    },
    {
      "name": "SourceNodeName",
      "tag": "json:\"source_node_name\" yaml:\"source_node_name\"",
      "type_name": "string"
    },
    {
      "name": "SourceBridgeName",
      "tag": "json:\"source_bridge_name\" yaml:\"source_bridge_name\"",
      "type_name": "string"
    },
    {
      "name": "SourceNodeTypeName",
      "tag": "json:\"source_node_type_name\" yaml:\"source_node_type_name\"",
      "type_name": "string"
    },
    {
      "name": "SourcePortName",
      "tag": "json:\"source_port_name\" yaml:\"source_port_name\"",
      "type_name": "string"
    },
    {
      "name": "Description",
      "tag": "json:\"description\" yaml:\"description\"",
      "type_name": "string"
    },
    {
      "name": "Number",
      "tag": "json:\"number\" yaml:\"number\"",
      "type_name": "int"
    },
    {
      "name": "MacAddress",
      "tag": "json:\"mac_address\" yaml:\"mac_address\"",
      "type_name": "string"
    },
    {
      "name": "Tagged",
      "tag": "json:\"tagged\" yaml:\"tagged\"",
      "type_name": "bool"
    },
    {
      "name": "VlanID",
      "tag": "json:\"vlan_id\" yaml:\"vlan_id\"",
      "type_name": "int"
    },
    {
      "name": "Vlan",
      "tag": "json:\"vlan\" yaml:\"vlan\"",
      "type_name": "Vlan"
    },
    {
      "name": "DestinationPortID",
      "tag": "json:\"destination_port_id\" yaml:\"destination_port_id\"",
      "type_name": "int"
    },
    {
      "name": "DestinationPort",
      "tag": "json:\"destination_port\" yaml:\"destination_port\" gorm:\"ForeignKey:DestinationPortID\"",
      "type_name": "Port"
    },
    {
      "name": "DestinationPortName",
      "tag": "json:\"destination_port_name\" yaml:\"destination_port_name\"",
      "type_name": "string"
    },
    {
      "name": "DestinationNodeID",
      "tag": "json:\"destination_node_id\" yaml:\"destination_node_id\"",
      "type_name": "int"
    },
    {
      "name": "DestinationNode",
      "tag": "json:\"destination_node\" yaml:\"destination_node\" gorm:\"ForeignKey:destination_node_id\"",
      "type_name": "Node"
    },
    {
      "name": "DestinationNodeName",
      "tag": "json:\"destination_node_name\" yaml:\"destination_node_name\"",
      "type_name": "string"
    },
    {
      "name": "DestinationBridgeName",
      "tag": "json:\"destination_bridge_name\" yaml:\"destination_bridge_name\"",
      "type_name": "string"
    },
    {
      "name": "DestinationNodeTypeName",
      "tag": "json:\"destination_node_type_name\" yaml:\"destination_node_type_name\"",
      "type_name": "string"
    }
  ],
  "sql_before_migration": [
    "select 1 from ports;",
    "select 1 from vlan_port_associations;",
    "select 1 from links;",
    "select 1 from nodes;",
    "select 1 from node_types;"
  ],
  "sql_after_migration": [
    "drop view if exists layer2_vlan_ports;",
    "drop view if exists layer2_vlan_port_numbers;",
    "drop view if exists layer2_routed_ports;",
    "drop view if exists layer2_links;",
    "create view if not exists layer2_vlan_ports as",
    "  select ports.*,",
    "    vlan_port_associations.vlan_id",
    "  from ports",
    "    inner join vlan_port_associations",
    "      on ports.id = vlan_port_associations.port_id;",
    "create view if not exists layer2_vlan_port_numbers as",
    "  select distinct source_ports.node_id source_node_id,",
    "    source_ports.number source_port_number,",
    "    source_ports.vlan_id source_port_vlan_id,",
    "    destination_ports.node_id destination_node_id,",
    "    destination_ports.number destination_port_number,",
    "    destination_ports.vlan_id destination_port_vlan_id",
    "  from layer2_vlan_ports source_ports",
    "    inner join links",
    "      on source_ports.id = links.source_port_id",
    "    inner join layer2_vlan_ports destination_ports",
    "      on links.destination_port_id = destination_ports.id",
    "  where source_port_vlan_id = destination_port_vlan_id;",
    "create view if not exists layer2_routed_ports as",
    "  select id from ports",
    "    inner join",
    "      (",
    "        select node_id,",
    "          number,",
    "          count(number)",
    "          ifcount",
    "        from ports",
    "        group by node_id,",
    "          number) port_interface_counts",
    "      on ports.node_id = port_interface_counts.node_id",
    "      and ports.number = port_interface_counts.number",
    "      and port_interface_counts.ifcount <> 1",
    "    inner join links",
    "      on ports.id = links.source_port_id;",
    "create view if not exists layer2_links as",
    "  select * from (",
    "    select distinct source_ports.id source_port_id,",
    "      source_nodes.id source_node_id,",
    "      source_nodes.name source_node_name,",
    "      case",
    "        when source_node_types.name in ('Router', 'Firewall', 'LoadBalancer', 'L3Switch', 'L2Switch') then",
    "          source_nodes.name || '-BR-VL' || source_ports.vlan_id",
    "        else",
    "          source_nodes.name",
    "      end source_bridge_name,",
    "      source_node_types.name source_node_type_name,",
    "      source_ports.name source_port_name,",
    "      source_ports.description description,",
    "      source_ports.number number,",
    "      source_ports.mac_address mac_address,",
    "      source_ports.tagged tagged,",
    "      source_ports.vlan_id vlan_id,",
    "      destination_ports.id destination_port_id,",
    "      destination_nodes.id destination_node_id,",
    "      destination_nodes.name destination_node_name,",
    "      destination_node_types.name destination_node_type_name,",
    "      case",
    "        when destination_node_types.name in ('Router', 'Firewall', 'LoadBalancer', 'L3Switch', 'L2Switch') then",
    "          destination_nodes.name || '-BR-VL' || destination_ports.vlan_id",
    "        else",
    "          destination_nodes.name",
    "        end destination_bridge_name,",
    "        destination_ports.name destination_port_name",
    "    from layer2_vlan_ports source_ports",
    "      inner join layer2_vlan_port_numbers",
    "        on source_ports.node_id = layer2_vlan_port_numbers.source_node_id",
    "        and source_ports.number = layer2_vlan_port_numbers.source_port_number",
    "        and source_ports.vlan_id = layer2_vlan_port_numbers.source_port_vlan_id",
    "      inner join layer2_vlan_ports destination_ports",
    "        on destination_ports.node_id = layer2_vlan_port_numbers.destination_node_id",
    "        and destination_ports.number = layer2_vlan_port_numbers.destination_port_number",
    "        and destination_ports.vlan_id = layer2_vlan_port_numbers.destination_port_vlan_id",
    "      inner join nodes source_nodes",
    "        on source_ports.node_id = source_nodes.id",
    "      inner join nodes destination_nodes",
    "        on destination_ports.node_id = destination_nodes.id",
    "      inner join node_types source_node_types",
    "        on source_nodes.node_type_id = source_node_types.id",
    "      inner join node_types destination_node_types",
    "        on destination_nodes.node_type_id = destination_node_types.id",
    "    union",
    "    select distinct 0 source_port_id,",
    "      source_nodes.id source_node_id,",
    "      source_nodes.name source_node_name,",
    "      source_nodes.name||'-GRT' source_bridge_name,",
    "      source_node_types.name source_node_type_name,",
    "      'port-vl'||vlan_port_associations.vlan_id source_port_name,",
    "      source_ports.description description,",
    "      0 number,",
    "      source_ports.mac_address mac_address,",
    "      0 tagged,",
    "      vlan_port_associations.vlan_id vlan_id,",
    "      0 destination_port_id,",
    "      0 destination_node_id,",
    "      source_nodes.name destination_node_name,",
    "      source_node_types.name destination_node_type_name,",
    "      source_nodes.name||'-BR-VL'||vlan_port_associations.vlan_id destination_bridge_name,",
    "      'port-vl'||vlan_port_associations.vlan_id destination_port_name",
    "     from ports source_ports",
    "       inner join nodes source_nodes",
    "         on source_ports.node_id = source_nodes.id",
    "       inner join node_types source_node_types",
    "         on source_nodes.node_type_id = source_node_types.id",
    "         and source_node_types.name in ('Router', 'Firewall', 'LoadBalancer', 'L3Switch')",
    "       inner join vlan_port_associations",
    "         on source_ports.id = vlan_port_associations.port_id",
    "     union",
    "       select distinct grt.destination_port_id source_port_id,",
    "         grt.destination_node_id source_node_id,",
    "         grt.destination_node_name source_node_name,",
    "         grt.destination_bridge_name source_bridge_name,",
    "         grt.destination_node_type_name source_node_type_name,",
    "         grt.destination_port_name source_port_name,",
    "         '' description,",
    "         0 number,",
    "         '' mac_address,",
    "         0 tagged,",
    "         grt.vlan_id vlan_id,",
    "         grt.source_port_id destination_port_id,",
    "         grt.source_node_id destination_node_id,",
    "         grt.source_node_name destination_node_name,",
    "         grt.source_node_type_name destination_node_type_name,",
    "         grt.source_bridge_name destination_bridge_name,",
    "         grt.source_port_name destination_port_name",
    "       from",
    "         (select distinct 0 source_port_id,",
    "           source_nodes.id source_node_id,",
    "           source_nodes.name source_node_name,",
    "           source_nodes.name||'-GRT' source_bridge_name,",
    "           source_node_types.name source_node_type_name,",
    "           'port-vl'||vlan_port_associations.vlan_id source_port_name,",
    "           source_ports.description description,",
    "           0 number,",
    "           source_ports.mac_address mac_address,",
    "           0 tagged,",
    "           vlan_port_associations.vlan_id vlan_id,",
    "           0 destination_port_id,",
    "           0 destination_node_id,",
    "           source_nodes.name destination_node_name,",
    "           source_node_types.name destination_node_type_name,",
    "           source_nodes.name||'-BR-VL'||vlan_port_associations.vlan_id destination_bridge_name,",
    "           'port-vl'||vlan_port_associations.vlan_id destination_port_name",
    "         from ports source_ports",
    "           inner join nodes source_nodes",
    "             on source_ports.node_id = source_nodes.id",
    "           inner join node_types source_node_types",
    "             on source_nodes.node_type_id = source_node_types.id",
    "             and source_node_types.name in ('Router', 'Firewall', 'LoadBalancer', 'L3Switch')",
    "           inner join vlan_port_associations",
    "             on source_ports.id = vlan_port_associations.port_id) grt)",
    "  where source_port_id not in (select id from layer2_routed_ports)",
    "    and destination_port_id not in (select id from layer2_routed_ports);"
  ]
}
